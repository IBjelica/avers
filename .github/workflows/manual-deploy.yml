name: Manual Production Deploy

on:
  workflow_dispatch:
    inputs:
      deploy_environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.deploy_environment }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        env:
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          NODE_ENV: production
          
      - name: Install PM2
        run: npm install pm2 -g
        
      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.HETZNER_HOST }} >> ~/.ssh/known_hosts
          
      - name: Deploy to Hetzner
        run: |
          # Create deployment directory with timestamp
          DEPLOY_DIR="~/avers/releases/$(date +%Y%m%d_%H%M%S)"
          
          # Create directory structure
          ssh ${{ secrets.SSH_USER }}@${{ secrets.HETZNER_HOST }} "mkdir -p ~/avers/releases"
          
          # Copy files
          rsync -azP --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.next/cache' \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.HETZNER_HOST }}:${DEPLOY_DIR}/
            
          # Install dependencies and build on server
          ssh ${{ secrets.SSH_USER }}@${{ secrets.HETZNER_HOST }} "cd ${DEPLOY_DIR} && \
            npm ci && \
            export RESEND_API_KEY='${{ secrets.RESEND_API_KEY }}' && \
            npm run build && \
            
            # Update symlink
            ln -sfn ${DEPLOY_DIR} ~/avers/current && \
            
            # Start or restart the application using port 3001 (or your preferred port)
            if pm2 list | grep -q 'avers'; then
              RESEND_API_KEY='${{ secrets.RESEND_API_KEY }}' PORT=3001 pm2 restart avers
            else
              RESEND_API_KEY='${{ secrets.RESEND_API_KEY }}' PORT=3001 pm2 start npm --name avers -- start
            fi"
